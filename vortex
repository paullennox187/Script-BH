local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Vortex EH script (Beta) V 0.0.1 ",
    LoadingTitle = "Wait ...",
    LoadingSubtitle = "by Paullennox | ItemTo",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = true,
       Invite = "ENv7udYT", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Key system",
       Subtitle = "https://discord.gg/geBs6ChY",
       Note = "HB script /aimbot/esp/fly/carmod...",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"7X3N5K2T8Q9L4C1M6J0V","1F9V6L2J4M8K3B7X5C0T","8P2N7M1L4J6T3V5K0C9B","3T8K2J5L9M1X6N4C7V0B","4J9L1M6T2K3C8V5N7X0B","5X2L8J4N3K9M1T6V0C7B","9M1T2K6L4C8J3X5N7V0B","2L5T8J1N4M6K3X9V0C7B","6J1N9L2T4K8M3C5X7V0B","3K8M1J2T5L4C9N7V0X6B","1N9L2T4M8K6J3X5V0C7B","8T5L3K1N6M9C2J4X7V0B","2J6T9L4M1K5X8N3C7V0B","7K3L2J8M1T9N4X5C0V6B","5N1L8K2T6J4M9C3X7V0B","4C9T2J6M1K5L3X8N7V0B","8X1L5T2N9J4M6K3C7V0B","3J4N2L8K1T6M5C9X7V0B","6K2L8M1T9N4J3X5C0V7B","1T5L9K2N4M8J3X6C7V0B"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings
    }
 })

local MainTab = Window:CreateTab("Main", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")


local Button = MainTab:CreateButton({
   Name = "Aimbot",
   Callback = function()
      local teamCheck = false
      local fov = 150
      local smoothing = 1
      
      local RunService = game:GetService("RunService")
      
      local FOVring = Drawing.new("Circle")
      FOVring.Visible = true
      FOVring.Thickness = 1.5
      FOVring.Radius = fov
      FOVring.Transparency = 1
      FOVring.Color = Color3.fromRGB(255, 128, 128)
      FOVring.Position = workspace.CurrentCamera.ViewportSize/2
      
      local function getClosest(cframe)
         local ray = Ray.new(cframe.Position, cframe.LookVector).Unit
         
         local target = nil
         local mag = math.huge
         
         for i,v in pairs(game.Players:GetPlayers()) do
             if v.Character and v.Character:FindFirstChild("Head") and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") and v ~= game.Players.LocalPlayer and (v.Team ~= game.Players.LocalPlayer.Team or (not teamCheck)) then
                 local magBuf = (v.Character.Head.Position - ray:ClosestPoint(v.Character.Head.Position)).Magnitude
                 
                 if magBuf < mag then
                     mag = magBuf
                     target = v
                 end
             end
         end
         
         return target
      end
      
      loop = RunService.RenderStepped:Connect(function()
         local UserInputService = game:GetService("UserInputService")
         local pressed = --[[UserInputService:IsKeyDown(Enum.KeyCode.E)]] UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) --Enum.UserInputType.MouseButton2
         local localPlay = game.Players.localPlayer.Character
         local cam = workspace.CurrentCamera
         local zz = workspace.CurrentCamera.ViewportSize/2
         
         if pressed then
             local Line = Drawing.new("Line")
             local curTar = getClosest(cam.CFrame)
             local ssHeadPoint = cam:WorldToScreenPoint(curTar.Character.Head.Position)
             ssHeadPoint = Vector2.new(ssHeadPoint.X, ssHeadPoint.Y)
             if (ssHeadPoint - zz).Magnitude < fov then
                 workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(CFrame.new(cam.CFrame.Position, curTar.Character.Head.Position), smoothing)
             end
         end
         
         if UserInputService:IsKeyDown(Enum.KeyCode.Delete) then
             loop:Disconnect()
             FOVring:Remove()
         end
      end)
   end,
})


local Button = MainTab:CreateButton({
    Name = "esp",
    Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua'))()
    end,
 })
 

 local Button = MainTab:CreateButton({
   Name = "Player (OP)",
   Callback = function()
      warn("Anti afk running")
      game:GetService("Players").LocalPlayer.Idled:connect(function()
      warn("Anti afk ran")
      game:GetService("VirtualUser"):CaptureController()
      game:GetService("VirtualUser"):ClickButton2(Vector2.new())
      end)
      
      for i,v in pairs(getgc(true)) do
          if type(v) == "function" and getfenv(v).script == game:GetService("Players").LocalPlayer.PlayerScripts.Code.controllers.antiCheatController then
              if getinfo(v).name ~= "onStart" then
      for a,b in pairs(getupvalues(v)) do
      if type(b) == "table" then
          for c,d in pairs(b) do
              if string.find(tostring(c),"max") then
                  rawset(b,c,math.huge)
              elseif string.find(tostring(c),"disallowed") then
                  rawset(b,c,{})
              end
          end
      end
      end
      end
      end
      end
      local function getplayer(plr)
          local player = nil
          for i,v in pairs(game.Players:GetPlayers()) do
              if string.find(v.Name,plr) or string.find(v.DisplayName,plr) then
                  player = v.Name
                  break
              end
          end
          return player
          end
          getfenv().jump = game.Players.LocalPlayer.Character.Humanoid.JumpHeight
      print("Idk why i even did this ;/")
      local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marco8642/science/main/ui%20libs2"))()
      local example = library:CreateWindow({
        text = "Emergency Hamburg"
      })
      example:AddDropdown({"Select Bus Driver Type","Rural Bus Driver","City Bus Driver"},function(state) 
          if state ~= "Select Bus Driver Type" then
       getfenv().drivertype  = state
          end
      end)
      example:AddToggle("Auto Farm[Bus]", function(state)
          getfenv().busman = (state and true or false)
          spawn(function()
              while getfenv().busman do
                  task.wait()
              local p,call = pcall(function()
                  local plr = game.Players.LocalPlayer
                  local car = workspace.Vehicles[plr.Name]
              if workspace.Vehicles:FindFirstChild(plr.Name) and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Part") and game.Players.LocalPlayer.Character.Humanoid.SeatPart == nil then
                 
                  local plr = game.Players.LocalPlayer
                  local car = workspace.Vehicles[plr.Name]
                  car.DriveSeat:Sit(game.Players.LocalPlayer.Character.Humanoid)
              end
              end)
              if p == false then
                  warn("Get in vehicle error:",call)
              end
              end
              end)
              spawn(function()
                  while getfenv().busman do
                      task.wait()
                      pcall(function()
                      if game.Players.LocalPlayer.Character.Humanoid.Health < 60 and game.Players.LocalPlayer.Character.Humanoid.SeatPart == nil then
              game.Players.LocalPlayer.Character:BreakJoints()
              warn("Character had to be reset we restarting")
                      end
                  end)
                  end
              end)
          while getfenv().busman do
              wait()
             local p,call = pcall(function()
                  workspace.Gravity = 196
                  local plr = game.Players.LocalPlayer
                  local car = workspace.Vehicles[plr.Name]
                  if   workspace.Vehicles:FindFirstChild(plr.Name) and not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Part")  then
                      repeat wait()
                          workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name).DriveSeat:Sit(game.Players.LocalPlayer.Character.Humanoid)
                      until game.Players.LocalPlayer.Character.Humanoid.SeatPart ~= nil
                      wait()
                      workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name):PivotTo(CFrame.new(-1683.09375, 15.630923271179199, -1286.167236328125))
                      wait(1)
                      game.Players.LocalPlayer.Character.Humanoid.Sit = false
                      wait(2)
                  if game.Players.LocalPlayer:DistanceFromCharacter(Vector3.new(-1683.09375, 5.630923271179199, -1286.167236328125)) < 50 then
                      game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-1708.8741455078125, 5.616213321685791, -1281.946044921875))
                      game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:wait()
                      game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-1730.544677734375, 5.683385848999023, -1280.9140625))
                      game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:wait()
                      repeat wait()
                      game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game)
                      game:GetService("VirtualInputManager"):SendKeyEvent(false,"E",false,game)
                      until #game:GetService("Players").LocalPlayer.PlayerGui.ShiftSystem:GetChildren() > 0
                      wait(3)
                      local busdriver = getfenv().drivertype or "Rural Bus Driver"
                      for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.ShiftSystem:GetDescendants()) do
                      if v.ClassName == "ImageButton" and v.Name == busdriver then
                          print(v)
                              if v.Parent ~= nil then
                          firesignal(v.MouseButton1Click)
                              end
                      end
                      end
                      wait(3)
                      for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.ShiftSystem:GetDescendants()) do
                      if v.ClassName == "ImageButton" and v.ImageColor3 == Color3.fromRGB(142, 68, 173) then
                          print(v)
                              if v.Parent ~= nil then
                          firesignal(v.MouseButton1Click)
                              end
                      end
                      end
                  wait(2)
                      print("check")
                      game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(-1722.3858642578125, 5.645286560058594, -1264.3126220703125))
                      game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:wait()
                      repeat wait()
                      game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game)
                      game:GetService("VirtualInputManager"):SendKeyEvent(false,"E",false,game)
                      until game:GetService("Players").LocalPlayer.PlayerGui.Dealership.Enabled == true or game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Part")
                      wait(2)
                      for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Dealership:GetDescendants()) do
                      if v.ClassName == "TextLabel" and v.Text == "Stuttgart Omnibus" then
                          local plr = game.Players.LocalPlayer
                          repeat wait()
                          if v.Parent ~= nil then
                              firesignal(v.Parent.MouseButton1Click)
                              for a,b in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Dealership:GetDescendants()) do
                                  if b.ClassName == "ImageButton" and b:FindFirstChildOfClass("TextLabel").Text == "Spawn Vehicle" and b.ImageColor3 == Color3.fromRGB(41, 125, 186) then
                                 firesignal(b.MouseButton1Click)
                                  end
                              end
                          end
                          until workspace.Vehicles:FindFirstChild(plr.Name) and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Part") or game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Part")
          
                          wait(2)
                      end
                  end
                  end
              elseif game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Part") and game.Players.LocalPlayer.Character.Humanoid.SeatPart ~= nil then
          workspace.Gravity = 0
          local plr = game.Players.LocalPlayer
          local chr = plr.Character
          local car = workspace.Vehicles[plr.Name]
          car.PrimaryPart = car.Body.Mass
          local dist = (car.WorldPivot.Position-car.WorldPivot.Position+Vector3.new(0,1000,0)).magnitude
          local TweenService = game:GetService("TweenService")
          local TweenInfoToUse = TweenInfo.new(0, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
          local TweenValue = Instance.new("CFrameValue")
          TweenValue.Value = car:GetPrimaryPartCFrame()
                  
          TweenValue.Changed:Connect(function()
          car:PivotTo(TweenValue.Value)
          end)
          local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value=car.WorldPivot+Vector3.new(0,1000,0)})
          OnTween:Play()
          OnTween.Completed:Wait()
          local plr = game.Players.LocalPlayer
          local chr = plr.Character
          local pos = game:GetService("Players").LocalPlayer.PlayerGui.Part.Adornee
          local car = workspace.Vehicles[plr.Name]
          local dist = (car.WorldPivot.Position-pos.Position+Vector3.new(0,1000,0)).magnitude
          local TweenService = game:GetService("TweenService")
          local TweenInfoToUse = TweenInfo.new(dist/90, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
          
          local TweenValue = Instance.new("CFrameValue")
          TweenValue.Value = car:GetPrimaryPartCFrame()
                  
          TweenValue.Changed:Connect(function()
          car:PivotTo(TweenValue.Value)
          end)
          local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value=pos.CFrame+Vector3.new(0,1000,0)})
          OnTween:Play()
          OnTween.Completed:Wait()
          local plr = game.Players.LocalPlayer
          local chr = plr.Character
          local pos = game:GetService("Players").LocalPlayer.PlayerGui.Part.Adornee
          local car = workspace.Vehicles[plr.Name]
          local dist = (car.WorldPivot.Position-pos.Position).magnitude
          local TweenService = game:GetService("TweenService")
          local TweenInfoToUse = TweenInfo.new(0, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
          
          local TweenValue = Instance.new("CFrameValue")
          TweenValue.Value = car:GetPrimaryPartCFrame()
                  
          TweenValue.Changed:Connect(function()
          car:PivotTo(TweenValue.Value)
          end)
          local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value=pos.CFrame})
          OnTween:Play()
          OnTween.Completed:Wait()
          workspace.Gravity = 196
          for i,v in pairs(workspace.BusStops:GetDescendants()) do
              if v.Name == "SelectionBox" and v.Visible == true then
                  car:PivotTo(v.Parent.CFrame+Vector3.new(0,5,0))
              end
              end
             repeat task.wait()
             until not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Part") or game.Players.LocalPlayer:DistanceFromCharacter(game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Part").Adornee.Position) > 70
          end
          end)
          if p == false then
          warn("main error:",call)
          end
          end
      end)
      example:AddToggle("Auto Farm[Truck]", function(state)
          getfenv().trucker = (state and true or false)
      spawn(function()
      while getfenv().trucker do
          task.wait()
          pcall(function()
      if workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name) and workspace.Vehicles[game.Players.LocalPlayer.Name].Body:FindFirstChild("Trailer") and game.Players.LocalPlayer.Character.Humanoid.SeatPart == nil then
          local plr = game.Players.LocalPlayer
          local car = workspace.Vehicles[plr.Name]
          car.DriveSeat:Sit(game.Players.LocalPlayer.Character.Humanoid)
      end
      end)
      end
      end)
      spawn(function()
          while getfenv().trucker do
              task.wait()
              pcall(function()
              if game.Players.LocalPlayer.Character.Humanoid.Health < 60 and game.Players.LocalPlayer.Character.Humanoid.SeatPart == nil then
      game.Players.LocalPlayer.Character:BreakJoints()
      warn("Character had to be reset we restarting")
              end
          end)
          end
      end)
      spawn(function()
      while getfenv().trucker do
          wait()
          pcall(function()
      if game:GetService("Players").LocalPlayer.PlayerGui.DeliverySystem.Enabled == true and game.Players.LocalPlayer.Character.Humanoid.SeatPart ~= nil then
          _G.rat = nil
          local num = 0
          for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.DeliverySystem:GetDescendants()) do
              if v.ClassName == "TextLabel" and string.find(v.Text,"XP") then
              local Val = tonumber(v.Text:split(" ")[1])
          if Val > num then
          num = Val
          print(Val)
          _G.rat = v.Parent
          end
          end
          end
          if _G.rat ~= nil then
          firesignal(_G.rat.MouseButton1Click)
          end
      end
      end)
      end
      end)
      while getfenv().trucker do
          wait()
          pcall(function()
              workspace.Gravity = 196
          if  workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name) and not workspace.Vehicles[game.Players.LocalPlayer.Name].Body:FindFirstChild("Trailer") then
              repeat wait()
                  workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name).DriveSeat:Sit(game.Players.LocalPlayer.Character.Humanoid)
              until game.Players.LocalPlayer.Character.Humanoid.SeatPart ~= nil
              wait()
              workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name):PivotTo(CFrame.new(717.53125, 15.626567840576172, 1462.559814453125))
              wait(1)
              game.Players.LocalPlayer.Character.Humanoid.Sit = false
              wait(2)
          if game.Players.LocalPlayer:DistanceFromCharacter(Vector3.new(717.53125, 15.626567840576172, 1462.559814453125)) < 50 then
              game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(712.7074584960938, 5.587162017822266, 1437.5025634765625))
              game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:wait()
              game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(707.704345703125, 5.657994270324707, 1426.1021728515625))
              game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:wait()
              repeat wait()
              game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game)
              game:GetService("VirtualInputManager"):SendKeyEvent(false,"E",false,game)
              until #game:GetService("Players").LocalPlayer.PlayerGui.ShiftSystem:GetChildren() > 0
              wait(1)
              for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.ShiftSystem:GetDescendants()) do
              if v.ClassName == "ImageButton" and v.ImageColor3 == Color3.fromRGB(39, 174, 96) then
                  print(v)
                  repeat wait()
                      if v.Parent ~= nil then
                  firesignal(v.MouseButton1Click)
                      end
                  until game:GetService("Players").LocalPlayer.PlayerGui.DeliverySystem.Enabled == true
              end
              end
              repeat wait()
              until game:GetService("Players").LocalPlayer.PlayerGui.DeliverySystem.Enabled == true
              _G.rat = nil
              local num = 0
              for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.DeliverySystem:GetDescendants()) do
                  if v.ClassName == "TextLabel" and string.find(v.Text,"XP") then
                  local Val = tonumber(v.Text:split(" ")[1])
              if Val > num then
              num = Val
              print(Val)
              _G.rat = v.Parent
              end
              end
              end
              if _G.rat ~= nil then
              firesignal(_G.rat.MouseButton1Click)
              end
              print("check")
              game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(699.1327514648438, 5.645294189453125, 1407.9368896484375))
              game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:wait()
              game.Players.LocalPlayer.Character.Humanoid:MoveTo(Vector3.new(700.1976318359375, 5.645294189453125, 1408.7381591796875))
              game.Players.LocalPlayer.Character.Humanoid.MoveToFinished:wait()
              repeat wait()
              game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game)
              game:GetService("VirtualInputManager"):SendKeyEvent(false,"E",false,game)
              until game:GetService("Players").LocalPlayer.PlayerGui.Dealership.Enabled == true
              for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Dealership:GetDescendants()) do
              if v.ClassName == "TextLabel" and v.Text == "Stuttgart Lastkraft" then
                  repeat wait()
                  if v.Parent ~= nil then
                      firesignal(v.Parent.MouseButton1Click)
                      for a,b in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Dealership:GetDescendants()) do
                          if b.ClassName == "ImageButton" and b.ImageColor3 == Color3.fromRGB(41, 125, 186) then
                         firesignal(b.MouseButton1Click)
                          end
                      end
                  end
                  until workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name) and workspace.Vehicles[game.Players.LocalPlayer.Name].Body:FindFirstChild("Trailer")
              end
          end
              end
          elseif workspace.Vehicles:FindFirstChild(game.Players.LocalPlayer.Name) and workspace.Vehicles[game.Players.LocalPlayer.Name].Body:FindFirstChild("Trailer") and game.Players.LocalPlayer.Character.Humanoid.SeatPart ~= nil then
      workspace.Gravity = 0
      local plr = game.Players.LocalPlayer
      local chr = plr.Character
      local car = workspace.Vehicles[plr.Name]
      car.PrimaryPart = car.Body.Mass
      local dist = (car.WorldPivot.Position-car.WorldPivot.Position+Vector3.new(0,500,0)).magnitude
      local TweenService = game:GetService("TweenService")
      local TweenInfoToUse = TweenInfo.new(dist/500, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
      local TweenValue = Instance.new("CFrameValue")
      TweenValue.Value = car:GetPrimaryPartCFrame()
              
      TweenValue.Changed:Connect(function()
      car:PivotTo(TweenValue.Value)
      end)
      local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value=car.WorldPivot+Vector3.new(0,500,0)})
      OnTween:Play()
      OnTween.Completed:Wait()
      local plr = game.Players.LocalPlayer
      local chr = plr.Character
      local pos = game:GetService("Players").LocalPlayer.PlayerGui.Part.Adornee
      local car = workspace.Vehicles[plr.Name]
      local dist = (car.WorldPivot.Position-pos.Position+Vector3.new(0,500,0)).magnitude
      local TweenService = game:GetService("TweenService")
      local TweenInfoToUse = TweenInfo.new(dist/90, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
      
      local TweenValue = Instance.new("CFrameValue")
      TweenValue.Value = car:GetPrimaryPartCFrame()
              
      TweenValue.Changed:Connect(function()
      car:PivotTo(TweenValue.Value)
      end)
      local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value=pos.CFrame+Vector3.new(0,500,0)})
      OnTween:Play()
      OnTween.Completed:Wait()
      local plr = game.Players.LocalPlayer
      local chr = plr.Character
      local pos = game:GetService("Players").LocalPlayer.PlayerGui.Part.Adornee
      local car = workspace.Vehicles[plr.Name]
      local dist = (car.WorldPivot.Position-pos.Position).magnitude
      local TweenService = game:GetService("TweenService")
      local TweenInfoToUse = TweenInfo.new(dist/500, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
      
      local TweenValue = Instance.new("CFrameValue")
      TweenValue.Value = car:GetPrimaryPartCFrame()
              
      TweenValue.Changed:Connect(function()
      car:PivotTo(TweenValue.Value)
      end)
      local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value=pos.CFrame})
      OnTween:Play()
      OnTween.Completed:Wait()
      workspace.Gravity = 196
      for i,v in pairs(workspace.DeliveryDestinations:GetDescendants()) do
          if v.Name == "SelectionBox" and v.Visible == true then
              car:PivotTo(v.Parent.CFrame+Vector3.new(0,5,0))
          end
          end
         repeat task.wait()
         until not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Part") or game.Players.LocalPlayer:DistanceFromCharacter(game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Part").Adornee.Position) > 70
      end
      end)
      end
      end)
      local example = library:CreateWindow({
          text = "Stuff"
        })
        example:AddLabel("Jump Height", function()
        end)
        example:AddBox("Enter Jump Height Value", function(object, focus)
            if focus then
           getfenv().jump = tonumber(object.Text)
           game.Players.LocalPlayer.Character.Humanoid.JumpHeight = getfenv().jump
            end
        end)
        example:AddButton("Reset Jump Height", function()
          game.Players.LocalPlayer.Character.Humanoid.JumpHeight = 4
        end)
        example:AddToggle("Anti Fall Damage", function(state)
          getfenv().ANTIFALL = (state and true or false)
      if  getfenv().ANTIFALL then
      getfenv().nofall =game:GetService("RunService").RenderStepped:Connect(function()
              if workspace:Raycast(game.Players.LocalPlayer.Character.HumanoidRootPart.Position, Vector3.new(0, -20, 0)).Instance ~= nil and game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity.Y < -30 then 
                  game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
              end
              end)
      else
          getfenv().nofall:Disconnect()
      end
      end)
      example:AddToggle("Anti Downed", function(state)
      getfenv().downed = (state and true or false)
      if getfenv().downed == true then
          getfenv().antichanged1=game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
              game.Players.LocalPlayer.Character.Humanoid.Health = 100
          end)
      else
          print(getfenv().antichanged1)
          getfenv().antichanged1:Disconnect()
      end
      end)
      example:AddButton("Reset Character", function(state)
      game.Players.LocalPlayer.Character:BreakJoints()
      end)
        example:AddButton("Infinite Stamina", function()
      if getfenv().firsttime == nil then
          getfenv().firsttime =true
          local func 
      for i,v in pairs(getgc(true)) do
          if type(v) == "function" and getinfo(v).name == "setStamina" then
      warn(getinfo(v).name)
      func = v
          end
          end
      local old= hookfunction(func,function(...)
          local args = {...}
          return args[1],math.huge
      end)
      end
      end)
   end,
})



local Button = MainTab:CreateButton({
   Name = "Fly 50% Not work (X) un fly|fly",
   Callback = function()
    local plr = game.Players.LocalPlayer
    local mouse = plr:GetMouse()
    
    localplayer = plr
    
    if workspace:FindFirstChild("Core") then
    workspace.Core:Destroy()
    end
    
    local Core = Instance.new("Part")
    Core.Name = "Core"
    Core.Size = Vector3.new(0.05, 0.05, 0.05)
    
    spawn(function()
    Core.Parent = workspace
    local Weld = Instance.new("Weld", Core)
    Weld.Part0 = Core
    Weld.Part1 = localplayer.Character.LowerTorso
    Weld.C0 = CFrame.new(0, 0, 0)
    end)
    
    workspace:WaitForChild("Core")
    
    local torso = workspace.Core
    flying = true
    local speed=10
    local keys={a=false,d=false,w=false,s=false}
    local e1
    local e2
    local function start()
    local pos = Instance.new("BodyPosition",torso)
    local gyro = Instance.new("BodyGyro",torso)
    pos.Name="EPIXPOS"
    pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
    pos.position = torso.Position
    gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    gyro.cframe = torso.CFrame
    repeat
    wait()
    localplayer.Character.Humanoid.PlatformStand=true
    local new=gyro.cframe - gyro.cframe.p + pos.position
    if not keys.w and not keys.s and not keys.a and not keys.d then
    speed=5
    end
    if keys.w then
    new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
    speed=speed+0
    end
    if keys.s then
    new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
    speed=speed+0
    end
    if keys.d then
    new = new * CFrame.new(speed,0,0)
    speed=speed+0
    end
    if keys.a then
    new = new * CFrame.new(-speed,0,0)
    speed=speed+0
    end
    if speed>10 then
    speed=5
    end
    pos.position=new.p
    if keys.w then
    gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*0),0,0)
    elseif keys.s then
    gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*0),0,0)
    else
    gyro.cframe = workspace.CurrentCamera.CoordinateFrame
    end
    until flying == false
    if gyro then gyro:Destroy() end
    if pos then pos:Destroy() end
    flying=false
    localplayer.Character.Humanoid.PlatformStand=false
    speed=10
    end
    e1=mouse.KeyDown:connect(function(key)
    if not torso or not torso.Parent then flying=false e1:disconnect() e2:disconnect() return end
    if key=="w" then
    keys.w=true
    elseif key=="s" then
    keys.s=true
    elseif key=="a" then
    keys.a=true
    elseif key=="d" then
    keys.d=true
    elseif key=="x" then
    if flying==true then
    flying=false
    else
    flying=true
    start()
    end
    end
    end)
    e2=mouse.KeyUp:connect(function(key)
    if key=="w" then
    keys.w=false
    elseif key=="s" then
    keys.s=false
    elseif key=="a" then
    keys.a=false
    elseif key=="d" then
    keys.d=false
    end
    end)
    start()
   end,
})

local Button = MainTab:CreateButton({
    Name = "Car mod",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Documantation12/Universal-Vehicle-Script/main/Main.lua'))()  
    end,
 })
